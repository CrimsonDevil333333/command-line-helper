name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        toolchain:
          - stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2.22.0

      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Build
        run: cargo build --release

      - name: Run tests
        run: cargo test

      - name: Package and Upload Release Artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: release-artifacts
          path: target/release/

  release:
    runs-on: windows-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"

      - name: GH Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: target/release/command_line_helper.exe
          repo_token: ${{ secrets.REPO_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
